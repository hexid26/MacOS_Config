CURRENT_OS="" #centos | ubuntu | osx and other valid options
OS_TYPE=""    #darwin | linux
function findCurrentOS() {
  OS_TYPE=$(uname)
  case "$OS_TYPE" in
    "Darwin")
      {
        # echo "Running on Mac OSX."
        CURRENT_OS="osx"
      }
      ;;
    "Linux")
      {
        # If available, use LSB to identify distribution
        if [ -f /etc/lsb-release -o -d /etc/lsb-release.d ]; then
          DISTRO=$(gawk -F= '/^ID=/{print $2}' /etc/os-release)
        else
          DISTRO=$(ls -d /etc/[A-Za-z]*[_-][rv]e[lr]* | grep -v "lsb" | cut -d'/' -f3 | cut -d'-' -f1 | cut -d'_' -f1)
        fi
        CURRENT_OS=$DISTRO
      }
      ;;
    *)
      {
        tput setaf 1
        echo "Unsupported OS, exiting"
        tput sgr0
        exit
      }
      ;;
  esac
}

findCurrentOS
CURRENT_OS=$(echo $CURRENT_OS | tr 'A-Z' 'a-z')
OS_TYPE=$(echo $OS_TYPE | tr 'A-Z' 'a-z')

# * pyenv 路径设置
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

# * autojump 设置
[ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh
# * 设置颜色
export LSCOLORS='exfxcxdxbxegedabagegeb'
export TERM=xterm-256color

# ! PATH 路径设置
## export PATH=$HOME/bin:/usr/local/bin:$PATH
export PATH=/usr/local/bin:${PATH}
export PATH=/usr/local/sbin:$PATH
export PATH=/Library/TeX/texbin:${PATH}
export PATH=/Applications/Visual\ Studio\ Code.app/Contents/Resources/app/bin:$PATH
# ! GO initiation
if [ "$OS_TYPE"x = "linux"x ]; then
  export GOROOT=${HOME}/go
  export GOPATH=${HOME}/GoLang
elif [ "$OS_TYPE"x = "darwin"x ]; then
  export GOROOT=/usr/local/opt/go/libexec
  export GOPATH=${HOME}/WorkSpace/2_Source/GoLang
fi
export GOBIN=${GOPATH}/bin
export PATH=${GOROOT}/bin:${GOBIN}:${PATH}
export CGO_ENABLED=1
# ! GO finish

# * Set personal aliases, overriding those provided by oh-my-zsh libs,
# * plugins, and themes. Aliases can be placed here, though oh-my-zsh
# * users are encouraged to define aliases within the ZSH_CUSTOM folder.
# * For a full list of active aliases, run `alias`.
alias cd..="cd .."
alias cdgo="cd ${GOPATH}"
alias cleardsstore="sudo find / -name '.DS_Store' -depth -exec rm {} \;"
alias ls="ls --color=auto"
alias l="ls -lhF --color=auto"
alias lr="ls -lhFR --color=auto"
alias ll="ls -alhF --color=auto"
alias llr="ls -alhFR --color=auto"
if [ -f "/usr/local/bin/nvim" -o -f "/usr/bin/nvim" ]; then
  alias vi="nvim"
  alias vim="nvim"
fi
alias zshconfig="nvim ~/.zshrc"
alias ohmyzshconfig="nvim ~/.oh-my-zsh"
alias update-pip="pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1  | xargs -n1 pip install -U"
alias update-pip-tsinghua="pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -i https://pypi.tuna.tsinghua.edu.cn/simple --trusted-host pypi.tuna.tsinghua.edu.cn -U"
alias update-zsh='cd ~/.oh-my-zsh;git pull;cd ~/.oh-my-zsh/custom/themes/powerlevel10k;git pull'
alias git-proxy-on='git config --global http.proxy socks5://127.0.0.1:1086;git config --global https.proxy socks5://127.0.0.1:1086'
alias git-proxy-off='git config --global --unset-all http.proxy;git config --global --unset-all https.proxy'
alias pip-list='pip freeze | sed 's/==.*//g' > requirements.txt'

if [ "$OS_TYPE"x = "darwin"x ]; then
  alias update-brew="brew update;brew upgrade;brew cleanup;brew doctor"
  alias fixscreen='sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.screensharing.plist &&  sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.screensharing.plist'
fi

if [ "$OS_TYPE"x = "linux"x ]; then
  alias update-pac="genpac --pac-proxy \"SOCKS5 127.0.0.1:1086\" --gfwlist-proxy=\"SOCKS5 127.0.0.1:1086\" --gfwlist-url=https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt --output=\"autoproxy.pac\""
fi

if [ "$CURRENT_OS"x = "osx"x ]; then
  alias update-software='sudo softwareupdate -i -a;mas upgrade;echo "error: mas 有 bug，无法更新"'
elif [ "$CURRENT_OS"x = "centos"x ]; then
  alias update-software="sudo yum update;sudo yum upgrade;sudo yum autoremove;sudo yum autoclean"
elif [ "$CURRENT_OS"x = "ubuntu"x ]; then
  alias update-software="sudo apt-get update;sudo apt-get upgrade;sudo apt-get autoremove;sudo apt-get autoclean"
fi

# * Correctly display UTF-8 with combining characters.
if [ "$TERM_PROGRAM" = "Apple_Terminal" ]; then
  setopt combiningchars
fi

[ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh
[ -f /usr/share/autojump/autojump.bash ] && . /usr/share/autojump/autojump.bash

[[ $TERM_PROGRAM == "iTerm.app" ]] && test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

function iterm2_print_user_vars() {
  iterm2_set_user_var currentPath $(echo ${PWD})
  iterm2_set_user_var currentUser $(echo ${USER})
}
